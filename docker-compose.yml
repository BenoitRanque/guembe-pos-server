# production configuration. See docker-compose.override.yml from development specific configurations
version: '3.7'
services:
  postgres:
    image: postgres:11-alpine
    restart: always
    expose:
      - "5432"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: ${PG_DATABASE}
      POSTGRES_USER: ${PG_USERNAME}
      POSTGRES_PASSWORD: ${PG_PASSWORD}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - ./postgres:/var/lib/postgresql/data
      # umcomment this in production, on a linux machine
      # will make sure time stays synced between host and container
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
  pgadmin:
    image: dpage/pgadmin4:4.13
    restart: always
    depends_on:
      - postgres
    expose:
      - "80"
    ports:
      - "5050:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    volumes:
      - ./pgadmin:/var/lib/pgadmin
  graphql-engine:
    image: hasura/graphql-engine:v1.0.0
    expose:
      - "8080"
    ports:
      - "6060:8080"
    depends_on:
      - postgres
      - zeus
    restart: always
    environment:
      HASURA_GRAPHQL_SERVER_PORT: 8080
      HASURA_GRAPHQL_SERVER_HOST: graphql-engine
      HASURA_GRAPHQL_DATABASE_URL: postgres://${PG_USERNAME}:${PG_PASSWORD}@postgres:5432/${PG_DATABASE}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_AUTH_HOOK: http://zeus:8080/hooks/hasura/auth
      HASURA_GRAPHQL_AUTH_HOOK_MODE: GET
      HASURA_GRAPHQL_CORS_DOMAIN: "https://app.guembe.ti, http://localhost:8080, http://localhost:8081, http://localhost:8082, http://localhost:9695, http://192.168.0.202:8080"
  zeus:
    image: zeus:prod
    build:
      context: .
      dockerfile: ./zeus/Dockerfile
      args:
        NODE_ENV: production
    command: node src/index.js
    expose:
      - "8080"
    ports:
      - "4040:8080"
    restart: always
    environment:
      PORT: 8080
      NODE_ENV: production
      AUTH_JWT_SECRET: ${AUTH_JWT_SECRET}
      PGHOST: postgres
      PGUSER: ${PG_USERNAME}
      PGDATABASE: ${PG_DATABASE}
      PGPASSWORD: ${PG_PASSWORD}
      PGPORT: 5432
      SAP_B1_USERNAME: ${SAP_B1_USERNAME}
      SAP_B1_PASSWORD: ${SAP_B1_PASSWORD}
      SAP_B1_COMPANY: ${SAP_B1_COMPANY}
    volumes:
      # umcomment this in production, on a linux machine
      # will make sure time stays synced between host and container
      # - /etc/timezone:/etc/timezone:ro
      # - /etc/localtime:/etc/localtime:ro
    depends_on:
      - postgres
